<style >

@import "icon.wxss";
@import "colorui.wxss";


.container {height: 100%;width:100%; display: flex;flex-direction: column;align-items: center;justify-content: space-between;box-sizing: border-box;}

/*这里是每个页面下半部分的介绍区域的css code*/
.introduce{width:100%;margin-top: 80rpx;}
.title{width:100px;margin:10rpx;background-color:#2b8cf0;color:#FFFFFF;border-radius: 10rpx;padding:10rpx;text-align: center;}
  .text{width:700rpx;background-color:#FFFFFF;padding:20rpx;font-size:30rpx;margin:15rpx;line-height: 40rpx;}
  .warn{background-color:#ed3f14;}

/*常用的输入框格式*/
  .input{margin-bottom: 50rpx;border-radius:10rpx;border:1rpx solid #c8cccf;
color:#6a6f77;padding:10rpx;text-align:center;width: 500rpx;height: 80rpx;
line-height: 80rpx;}

</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'


export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/identity',
      'pages/createRoom',
      'pages/getRoom',
      'pages/myRecord',
      'pages/myRoomRecord',
      'pages/roomMsg',
      'pages/time',
      'pages/test',
      'pages/index2'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '无机课堂',
      navigationBarTextStyle: 'black',
      navigationStyle:"custom",
      enablePullDownRefresh: true,//开启下拉刷新 
    }
  }

  globalData = {
    userInfo: null,
    roomId:"",//房间号
    remark:"",//房间备注
    roomIds:1,//房间在数据库表中的主键id,默认为1，表示没有加入房间
    isbind:true,//是否绑定账号
    schoolId:"",//学号
    schoolName:"",//绑定的姓名
    url:"https://daliu.mynatapp.cc/classtime/",
    openId:"",
    netWorkType:"",
    flag:true,//这个标志位用来控制向后台发送的次数
    StatusBar:"",
    CustomBar:"",
    flag:true,//用来控制time中online和suspend的发送
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
    wx.getSystemInfo({
      success: e => {
        this.globalData.StatusBar = e.statusBarHeight;
        this.globalData.CustomBar = e.platform == 'android' ? e.statusBarHeight + 50 : e.statusBarHeight + 45;
      }
    })
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }

  isNumber(val) {
      var regPos = /^\d+(\.\d+)?$/; //非负浮点数
      var regNeg = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数
      if(regPos.test(val) || regNeg.test(val)) {
          return true;
      } else {
          return false;
      }
    }
}
</script>

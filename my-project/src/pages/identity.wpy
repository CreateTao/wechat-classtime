<style>
.work{margin-top: 100rpx;}

.input{margin-bottom: 50rpx;border-radius:10rpx;border:1rpx solid #c8cccf;
color:#6a6f77;padding:10rpx;text-align:center;}

.button1{background-color:#45c8af;border-radius:40rpx;margin-top: 30rpx;}

</style>

<template>
  <view class="cu-custom" style="height:{{CustomBar}}px;">
  <view class="cu-bar fixed gradual-blue" style="height:{{CustomBar}}px;padding-top:{{StatusBar}}px;">
    <navigator class='action' open-type="navigateBack" delta="1" hover-class="none">
      <text class='icon-back'></text>身份认证
    </navigator>
  </view>
  </view>
  
	<view class="container">
	  <!--work begain-->
	  <view class="work">
	  	<view  wx:if="{{isbind==true}}">
	  		<input class="input" disable="true"  name="name" placeholder="姓名：{{schoolName}}"/>
	  		<input class="input" disable="true" name="id" placeholder="学号：{{schoolId}}"/>
	  	</view>
	  	<view wx:else>
	  		<form bindsubmit="submit">
	  			<input class="input" type="text" name="name" placeholder="请输入姓名！"/>
	  			<input class="input" type="number" name="id" placeholder="请输入学号！"/>
	  			<button class="button1" form-type="submit">提交</button>
	  	</form>
	  	</view>
      <i-modal title="删除确认" visible="{{visible}}" actions="{{actions}}"bind:click="query">
        <view>添加后将不可修改！</view>
      </i-modal>
	  </view>
	  <!--work end-->

    <!--introduce begain-->
    <view class="introduce">
      <view class="title">如何使用</view>
      <view class="text warn">注意：身份绑定只可绑定一次，二次修改请联系管理员</view>
      <view class="text">绑定后方可显示您的姓名，否则显示您的微信昵称</view>
      <view class="text">姓名和学号务必都要输入！</view>
    </view>
    <!--introduce begain-->
	</view>


</template>


<script>
  import wepy from 'wepy'

  export default class Identity extends wepy.page {
    config = {
      navigationBarTitleText: '身份绑定',
      usingComponents:{
        "i-modal": "../ui/iview/modal/index"
      },
      backgroundTextStyle: "dark",//白色主题启用深色模式，在下拉刷新时才能有白色圆点
    }
    components = {
    }

    mixins = []

    data = {
    	isbind:true,//是否绑定账号
     	schoolId:"",//学号
     	schoolName:"",//绑定的姓名
      visible:false,//控制确定选项是否弹出
      actions: [
            {
                name: '取消'
            },
            {
                name: '确定',
                color: '#ed3f14',
                loading: false
            }
        ],//弹出的确定选项显示内容
      StatusBar:"",
      CustomBar:"",
    }

    computed = {
      
    }

    methods = {
      submit(res){
      	//console.log(res)
      	var name=res.detail.value.name
      	var id=res.detail.value.id 
      	//this.log(name+id)

      	//格式检查
      	if(!this.isNumber(id)){
      		this.Toast("学号必须全为数字！","none",2000)
      		return;
      	}
        if(id.length>15){
          this.Toast("学号没这么长！","none",2000)
          return;
        }
      	if(name.length>10){
      		this.Toast("姓名过长！","none",2000)
      		return;
      	}else if(name.length==0){
          this.Toast("请填写姓名！","none",2000)
          return;
        }

        this.schoolName=name
        this.schoolId=id
      	var that=this
      	//wx.showLoading({title: '加载中'})
        //弹出确定框
        this.visible=true
      	
      },
      query({ detail }){
        if (detail.index === 0) {
            this.visible=false
        } else {
            //const action = [...this.data.actions];
            this.actions[1].loading = true;
            //向服务器发送信息
            var that=this
          wx.request({
            url: that.$parent.globalData.url+"user/schoolId",
            method: 'POST',
            header: {
              "Content-Type": "application/x-www-form-urlencoded"
            },
            data: {
              openid: that.$parent.globalData.openId,
              studentId: that.data.schoolId,
              schoolName:that.data.schoolName
            },
            success: function (res) {
              if(res.data==""){
                that.Toast("服务器出错！","none",1000)
              }else if (res.data.status == "yes") {
                //wx.hideLoading()
                that.actions[1].loading = false;
                that.visible=false
                that.Toast("绑定成功！","success",1000)
                //更新数据
                that.isbind=true
                that.$parent.globalData.isbind=true
                that.$parent.globalData.schoolId=that.data.schoolId
                that.$parent.globalData.schoolName=that.data.schoolName
                that.$apply()
              } else  {
                //wx.hideLoading()
                that.actions[1].loading = false;
                that.visible=false
                that.Toast("服务器错误！","none",1000)
                that.log("绑定失败，返回信息：  " + res.data);
              }
            },
            fail:function(){
              //wx.hideLoading()
              that.action[1].loading = false;
              that.visible=false
              that.Toast("服务器错误！","none",1000)
              that.log("fail")
            }
          })
        }
      }

    }

    events = {
    }

    onLoad(options) {
      //生命周期函数--监听页面加载
      this.StatusBar=this.$parent.globalData.StatusBar
      this.CustomBar=this.$parent.globalData.CustomBar
    }

    onReady(){
      //生命周期函数--监听页面初次渲染完成
    }

    onShow(){
      //生命周期函数--监听页面显示
      this.isbind=this.$parent.globalData.isbind
      this.schoolId=this.$parent.globalData.schoolId
      this.schoolName=this.$parent.globalData.schoolName
    }

    onHide(){
      //生命周期函数--监听页面隐藏
    }

    onUnload(){
      //生命周期函数--监听页面卸载
    }

    onPullDownRefresh(){
      //页面相关事件处理函数--监听用户下拉动作
      this.log("onPullDownRefresh")
      this.isbind=this.$parent.globalData.isbind
      this.schoolId=this.$parent.globalData.schoolId
      this.schoolName=this.$parent.globalData.schoolName
      setTimeout(function(){  wx.stopPullDownRefresh()},1000)
    }

    onReachBottom(){
      //页面上拉触底事件的处理函数
    }

    Toast(title,icon,duration){
      //自己封装的Toast函数
      wx.showToast({
        title:title,
        icon: icon,
        duration:duration
      })
    }

    log(res){
      //自己封装的log函数
      console.log("identity:  "+res)
    }

    isNumber(val) {
	    var regPos = /^\d+(\.\d+)?$/; //非负浮点数
	    var regNeg = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数
	    if(regPos.test(val) || regNeg.test(val)) {
	        return true;
	    } else {
	        return false;
	    }
    }
    
    
  }
</script>
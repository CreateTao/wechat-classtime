<!--这是无机课堂的主页-->

<style >


  .userinfo {display: flex;flex-direction: column;align-items: center;margin-top:100rpx;}

  .userinfo-avatar {width: 100rpx;height: 100rpx;border-radius: 50%;}
  .userinfo-nickname {color: #aaa;font-size: 35rpx;}

  .notice{width:400rpx; background-color:#99cc67;color:#fefced;padding:15rpx;text-align: center;border-radius: 15rpx;margin-top: 50rpx;font-size: 35rpx;}
  .work{display:flex;flex-direction:column;margin-top:50rpx;}
  .work_item{display:flex;flex-direction:row;}
  .button1{flex:1;background-color:#19b16b;color:#FFFFFF;margin:20rpx;border-radius: 15rpx;}

  .nav-list {
  display: flex;
  flex-wrap: wrap;
  padding: 0px 40rpx 0px;
  justify-content: space-between;
}

.nav-li {
  color: #666;
  padding: 30rpx;
  border-radius: 12rpx;
  width: 45%;
  margin: 0 2.5% 40rpx;
  background-image: url(https://image.weilanwl.com/color2.0/cardBg.png);
  background-size: cover;
  background-position: center;
  position: relative;
  z-index: 1;
}

.nav-li::after {
  content: "";
  position: absolute;
  z-index: -1;
  background-color: inherit;
  width: 100%;
  height: 100%;
  left: 0;
  bottom: -10%;
  border-radius: 10rpx;
  opacity: 0.2;
  transform: scale(0.9, 0.9);
}

.nav-li.cur {
  color: #fff;
  background: rgb(94, 185, 94);
  box-shadow: 4rpx 4rpx 6rpx rgba(94, 185, 94, 0.4);
}

.nav-title {
  font-size: 32rpx;
  font-weight: 300;
}

.nav-title::first-letter {
  font-size: 40rpx;
  margin-right: 4rpx;
}

.nav-name {
  font-size: 28rpx;
  text-transform: Capitalize;
  margin-top: 20rpx;
  position: relative;
}

.nav-name::before {
  content: "";
  position: absolute;
  display: block;
  width: 40rpx;
  height: 6rpx;
  background: #fff;
  bottom: 0;
  right: 0;
  opacity: 0.5;
}

.nav-name::after {
  content: "";
  position: absolute;
  display: block;
  width: 100rpx;
  height: 1px;
  background: #fff;
  bottom: 0;
  right: 40rpx;
  opacity: 0.3;
}

.nav-name::first-letter {
  font-weight: bold;
  font-size: 36rpx;
  margin-right: 1px;
}

.nav-li text {
  position: absolute;
  right: 30rpx;
  top: 30rpx;
  font-size: 52rpx;
  width: 60rpx;
  height: 60rpx;
  text-align: center;
  line-height: 60rpx;
}

.text-light {
  font-weight: 300;
}

@keyframes show {
  0% {
    transform: translateY(-50px);
  }

  60% {
    transform: translateY(40rpx);
  }

  100% {
    transform: translateY(0px);
  }
}

@-webkit-keyframes show {
  0% {
    transform: translateY(-50px);
  }

  60% {
    transform: translateY(40rpx);
  }

  100% {
    transform: translateY(0px);
  }
}

  
</style>



<template>
  <view class="cu-custom" style="height:{{CustomBar}}px;">
  <view class="cu-bar fixed gradual-blue" style="height:{{CustomBar}}px;padding-top:{{StatusBar}}px;">
    <navigator class='action' open-type="navigateBack" delta="1" hover-class="none">
      <text class='icon-back'></text>无机课堂
    </navigator>
  </view>
  </view>

  <view class="container">

    <!--user begain-->
    <view class="userinfo">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view>
    <!--user end-->

    <view class="notice" wx:if="{{roomId==''}}">你还未加入房间！</view>
    <view class="notice" wx:else>您的房间号为{{roomId}}</view>

    <!--work begain-->
    <view class="work">
      <view class='nav-list'>
        <view class="nav-li bg-{{item.color}}" style="color:#FFFFFF;" wx:for="{{elements}}" bindtap="{{item.name}}" >
          <view class="nav-title">{{item.title}}</view>
          <view class="nav-name">{{item.name}}</view>
          <text class='icon-{{item.icon}}'></text>
        </view>
      </view>
    </view>
    <!--work end-->

    <!--introduce begain-->
    <view class="introduce">
      <view class="title">怎么使用</view>
      <view class="text warn" wx:if="{{isbind==false}}">身份绑定将只能使用一次，修改请联系管理员</view>
      <view class="text" wx:if="{{isbind==false}}">身份绑定：暂未绑定学号和姓名</view>
      <view class="text">进入房间后您的计时信息都将提交到该房间内</view>
      <view class="text">您也可以创建房间，其他人员可依据房间码进入您的房间</view>
      <view class="text">“我的记录”,您可以查看您的计时或者房间记录</view>
      <view class="text">“我的房间”,您可以查看您所创建过的房间</view>
      <view class="text">“房间信息”,您可以查看当前加入的房间的详细信息</view>
      <view class="text">“尊敬的用户”，您好，若遇到系统错误的情况，请及时联系管理员邮箱2015819418@qq.com，我们感谢您的使用，祝您学习愉快！</view>
    </view>
    <!--introduce end-->

    

  </view>
 
</template>





<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '无机课堂',
      usingComponents:{
      },
      enablePullDownRefresh: true,//开启下拉刷新 
      backgroundTextStyle: "dark",//白色主题启用深色模式，在下拉刷新时才能有白色圆点
    }
    components = {
    }

    mixins = []

    data = {
      StatusBar:"",
      CustomBar:"",
      userInfo: {
        nickName: '加载中...',
      },
      roomId:"",//房间号
      isbind:true,//是否绑定账号
      elements: [
      { title: '计时', name: 'time', color: 'cyan', icon: 'countdownfill' },
      { title: '创建房间', name: 'createRoom', color: 'blue', icon: 'colorlens' },
      { title: '进入房间', name: 'getRoom', color: 'purple', icon: 'circlefill' },
      { title: '退出房间', name: 'exitRoom', color: 'mauve', icon: 'exit' },
      { title: '我的记录', name: 'myRecord', color: 'pink', icon: 'footprint' },
      { title: '我的房间', name: 'myRoomRecord', color: 'brown', icon: 'homefill' },
      { title: '房间信息', name: 'roomMsg', color: 'red', icon: 'selectionfill' }
      ],
      msg:true,
      flag1:true,//控制没有绑定学号，多次刷新只出来一个“身份绑定”的按钮
    }

    computed = {
      
    }

    methods = {
      test(){
        this.setData({msg:false})
        this.$apply()
        console.log(this.data.msg)
        //this.$apply()
      },
      identity(){
        this.$navigate({url:"./identity"})
      },
      createRoom(){
        this.$navigate({url:"./createRoom"})
      },
      getRoom(){
        this.$navigate({url:"./getRoom"})
      },
      exitRoom(){
        //退出房间无需向后台发送信息
        if(this.$parent.globalData.roomId=="" || this.$parent.globalData.roomId==1){
          this.Toast("您还未加入房间！","none",2000)
        }else{
          this.$parent.globalData.roomId=""
          this.$parent.globalData.roomIds=1
          this.$apply()
          wx.startPullDownRefresh()
        }
      },
      myRecord(){
        this.$navigate({url:"./myRecord"})
      },
      myRoomRecord(){
        this.$navigate({url:"./myRoomRecord"})
      },
      roomMsg(){
        if(this.$parent.globalData.roomIds==1){
          this.Toast("您还未加入房间！","none",1000)
          //this.$navigate({url:"./roomMsg"})
        }else{
          this.$navigate({url:"./roomMsg?roomId="+this.$parent.globalData.roomIds})
        }
      },
      time(){
        this.$navigate({url:"./time"})
      },
    }

    events = {
    }

    onLoad() {
      this.StatusBar=this.$parent.globalData.StatusBar
      this.CustomBar=this.$parent.globalData.CustomBar
      this.userInfo=this.$parent.globalData.userInfo
      //console.log(new Date(72000000).getHours())
      //this.$navigate({url:"./index2"})
    }

    onShow(){
      this.isbind=this.$parent.globalData.isbind
      this.roomId=this.$parent.globalData.roomId
      //console.log(this.$parent.globalData.isbind)

      if(this.data.flag1==true && this.$parent.globalData.isbind==false){
        //控制没有绑定学号，多次刷新只出来一个“身份绑定”的按钮
        this.data.flag1=false
        var json={ 'title': '绑定学号', 'name': 'identity', 'color': 'orange', 'icon': 'link' }
        var ele=this.data.elements
        ele.push(json)
        this.elements=ele
      }
    }


    onPullDownRefresh(){
      //页面相关事件处理函数--监听用户下拉动作
      this.log("onPullDownRefresh")
      this.isbind=this.$parent.globalData.isbind
      this.roomId=this.$parent.globalData.roomId
      this.userInfo=this.$parent.globalData.userInfo
      if(this.data.flag1==true && this.$parent.globalData.isbind==false){
        //控制没有绑定学号，多次刷新只出来一个“身份绑定”的按钮
        that.data.flag1=false
        var json={ 'title': '绑定学号', 'name': 'identity', 'color': 'orange', 'icon': 'link' }
        var ele=that.data.elements
        ele.push(json)
        that.elements=ele
      }
      setTimeout(function(){  wx.stopPullDownRefresh()},1500)
    }

    Toast(title,icon,duration){
      //自己封装的Toast函数
      wx.showToast({
        title:title,
        icon: icon,
        duration:duration
      })
    }

    log(res){
      //自己封装的log函数
      console.log("idnex:  "+res)
    }
    
  }
</script>

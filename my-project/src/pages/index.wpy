<!--这是无机课堂的主页-->

<style >


  .userinfo {display: flex;flex-direction: column;align-items: center;margin-top:100rpx;}

  .userinfo-avatar {width: 100rpx;height: 100rpx;border-radius: 50%;}
  .userinfo-nickname {color: #aaa;font-size: 35rpx;}

  .notice{width:400rpx; background-color:#99cc67;color:#fefced;padding:15rpx;text-align: center;border-radius: 15rpx;margin-top: 50rpx;font-size: 35rpx;}
  .work{display:flex;flex-direction:column;margin-top:50rpx;}
  .work_item{display:flex;flex-direction:row;}
  .button1{flex:1;background-color:#19b16b;color:#FFFFFF;margin:20rpx;border-radius: 15rpx;}

  .nav-list {
  display: flex;
  flex-wrap: wrap;
  padding: 0px 40rpx 0px;
  justify-content: space-between;
}

.nav-li {
  color: #666;
  padding: 30rpx;
  border-radius: 12rpx;
  width: 45%;
  margin: 0 2.5% 40rpx;
  background-image: url(https://image.weilanwl.com/color2.0/cardBg.png);
  background-size: cover;
  background-position: center;
  position: relative;
  z-index: 1;
}

.nav-li::after {
  content: "";
  position: absolute;
  z-index: -1;
  background-color: inherit;
  width: 100%;
  height: 100%;
  left: 0;
  bottom: -10%;
  border-radius: 10rpx;
  opacity: 0.2;
  transform: scale(0.9, 0.9);
}

.nav-li.cur {
  color: #fff;
  background: rgb(94, 185, 94);
  box-shadow: 4rpx 4rpx 6rpx rgba(94, 185, 94, 0.4);
}

.nav-title {
  font-size: 32rpx;
  font-weight: 300;
}

.nav-title::first-letter {
  font-size: 40rpx;
  margin-right: 4rpx;
}

.nav-name {
  font-size: 28rpx;
  text-transform: Capitalize;
  margin-top: 20rpx;
  position: relative;
}

.nav-name::before {
  content: "";
  position: absolute;
  display: block;
  width: 40rpx;
  height: 6rpx;
  background: #fff;
  bottom: 0;
  right: 0;
  opacity: 0.5;
}

.nav-name::after {
  content: "";
  position: absolute;
  display: block;
  width: 100rpx;
  height: 1px;
  background: #fff;
  bottom: 0;
  right: 40rpx;
  opacity: 0.3;
}

.nav-name::first-letter {
  font-weight: bold;
  font-size: 36rpx;
  margin-right: 1px;
}

.nav-li text {
  position: absolute;
  right: 30rpx;
  top: 30rpx;
  font-size: 52rpx;
  width: 60rpx;
  height: 60rpx;
  text-align: center;
  line-height: 60rpx;
}

@keyframes show {
  0% {
    transform: translateY(-50px);
  }

  60% {
    transform: translateY(40rpx);
  }

  100% {
    transform: translateY(0px);
  }
}

@-webkit-keyframes show {
  0% {
    transform: translateY(-50px);
  }

  60% {
    transform: translateY(40rpx);
  }

  100% {
    transform: translateY(0px);
  }
}

  
</style>



<template>
  <view class="cu-custom" style="height:{{CustomBar}}px;">
  <view class="cu-bar fixed gradual-blue" style="height:{{CustomBar}}px;padding-top:{{StatusBar}}px;">
    <navigator class='action' open-type="navigateBack" delta="1" hover-class="none">
      <text class='icon-back'></text>无机课堂
    </navigator>
  </view>
  </view>

  <view class="container">

    <!--user begain-->
    <view class="userinfo">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view>
    <!--user end-->

    <view class="notice" wx:if="{{roomId==''}}">你还未加入房间！</view>
    <view class="notice" wx:else>您的房间号为{{roomId}}</view>

    <!--work begain-->
    <view class="work">
      <view class='nav-list'>
        <view class="nav-li bg-{{item.color}}" style="color:#FFFFFF;" wx:for="{{elements}}" bindtap="choose" data-index="{{index}}">
          <view class="nav-title">{{item.title}}</view>
          <view class="nav-name">{{item.name}}</view>
          <text class='icon-{{item.icon}}'></text>
        </view>
      </view>
    </view>
    <!--work end-->    

  </view>

  <!--introduce begain-->
    <view class="cu-bar bg-white solid-bottom margin-top">
      <view class="action">
        <text class="icon-title text-orange"></text>这怎么用？
      </view>
      <view class="action">
        <button class="cu-btn bg-green shadow" bindtap="numSteps">下一步</button>
      </view>
    </view>
    <view class="bg-white padding">
      <view class="cu-steps">
        <view class="cu-item {{index>num?'':'text-blue'}}" wx:for="{{numList}}" wx:key>
          <text class="num" bindtap="numSteps" data-index="{{index + 1}}"></text> {{item.name}}
        </view>
      </view>
    </view>
    <view class="introduce-text">{{numList[num].introduce}}</view>
    
    <!--introduce end-->

    <!--model begain-->
    <view class="cu-modal {{getIntoRoomModalName=='show'?'show':''}}">
      <view class="cu-dialog">
        <view class="cu-bar bg-white justify-end">
          <view class='content'>我要进入房间</view>
          <view class='action' bindtap="cancel">
            <text class='icon-close text-red'></text>
          </view>
        </view>
        <form bindsubmit="getIntoRoomSubmit">
          <view class='padding-xl'>
            <view class="cu-form-group">
              <view class="title">房间号</view>
              <input type="number" name="number" placeholder="100-9999"></input>
            </view>
            <view></view>
          </view>
          <view class="cu-bar bg-white justify-end">
            <view class='action'>
              <button class='cu-btn line-green text-green' bindtap='cancel'>取消</button>
              <button class='cu-btn bg-green 'style="margin-left:390rpx;" form-type="submit">确定</button>
            </view>
          </view>
        </form>

      </view>
    </view>
    <!--model end-->
 
</template>





<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page { 
    config = {
      navigationBarTitleText: '无机课堂',
      usingComponents:{
      },
      enablePullDownRefresh: true,//开启下拉刷新 
      backgroundTextStyle: "dark",//白色主题启用深色模式，在下拉刷新时才能有白色圆点
    }
    components = {
    }

    mixins = []

    data = {
      StatusBar:"",
      CustomBar:"",
      userInfo: {
        nickName: '加载中...',
      },
      roomId:"",//房间号
      isbind:true,//是否绑定账号
      elements: [
      { title: '创建房间', name: 'createRoom', color: 'blue', icon: 'colorlens' },
      { title: '进入房间', name: 'getRoom', color: 'purple', icon: 'circlefill' },
      { title: '退出房间', name: 'exitRoom', color: 'mauve', icon: 'exit' },
      { title: '房间信息', name: 'roomMsg', color: 'red', icon: 'selectionfill' },
      { title: '房间记录', name: 'roomRecord', color: 'brown', icon: 'tagfill' }
      ],
      msg:true,
      flag1:true,//控制没有绑定学号，多次刷新只出来一个“身份绑定”的按钮
      numList: [{
        name: '创建房间',
        introduce:'您可以自由创建您的房间，让其他用户加入！'
      }, {
        name: '进入房间',
        introduce:'您可以依据房间码进入不同的房间！'
      }, {
        name: '退出房间',
        introduce:'您可以选择退出房间，然后您的专注记录将不会提交到那个房间内！'
      }, {
        name: '房间信息',
        introduce:'在这里，您可以查看你加入的房间的信息！'
      },{
        name: '房间记录',
        introduce:'您可以找到您创建过的房间记录！'
      },{
        name: '绑定学号',
        introduce:'我们真诚的劝您还是绑定下学号和姓名，这样您加入房间后房主就能看到您的姓名和学号了！'
      }],
      num: 0,//底部介绍信息控制数字
      number:"",//用户输入的房间号
      getIntoRoomModalName:"",//进入房间的输入窗口控制参数
      }

    computed = {
      
    }

    methods = {
      choose(e){
        let index=e.currentTarget.dataset.index
        switch(index){
          case 0:
            this.$navigate({url:"./createRoom"})
            break;

          case 1:
            //this.$navigate({url:"./getRoom"})
            this.getIntoRoomModalName="show"
            break;

          case 2:
            //退出房间无需向后台发送信息
            if(this.$parent.globalData.roomId=="" || this.$parent.globalData.roomId==1){
              this.toast("您还未加入房间！","none",2000)
            }else{
              this.$parent.globalData.roomId=""
              this.$parent.globalData.roomIds=1
              this.$apply()
              wx.startPullDownRefresh()
            }
            break;

          case 3:
            if(this.$parent.globalData.roomIds==1){
              this.toast("您还未加入房间！","none",1000)
              //this.$navigate({url:"./roomMsg"})
            }else{
              this.$navigate({url:"./roomMsg?roomId="+this.$parent.globalData.roomIds})
            }
            break;

          case 4:
            this.$navigate({url:"./myRoomRecord"})
            break;

          case 5:
            this.$navigate({url:"./identity"})
            break;

        }
      },
      numSteps(e) {
        //console.log(e)
        if(e.currentTarget.dataset.index==undefined){
          //点击了"下一步"
          this.num=this.data.num == this.data.numList.length - 1 ? 0 : this.data.num + 1
        }else{
          //直接点击的数字
          this.num=e.currentTarget.dataset.index - 1
        }
      },
      getIntoRoomSubmit(res){
        var number=res.detail.value.number
        if(!this.$parent.isNumber(number)){
          this.toast("请正确输入房间号码！","none",2000)
          return
        }

        if(this.$parent.globalData.roomId!="" || this.$parent.globalData.roomIds!=1){
          //当前已经加入房间
          if(number==this.$parent.globalData.roomId){
            //输入的号码和当前的号码相同
            this.toast("您已在该房间中！","none",1500)
          }

        }else{
          //当前还没加入房间，直接向后台发送
          this.data.number=number
          this.getIntoRoomModalName=""
          this.$apply()
          this.getIntoRoomSendMessage()
        }
      },
      cancel(){
        this.getIntoRoomModalName=""
      }
      
    }

    events = {
    }

    onLoad() {
      this.StatusBar=this.$parent.globalData.StatusBar
      this.CustomBar=this.$parent.globalData.CustomBar
      this.userInfo=this.$parent.globalData.userInfo
      //console.log(new Date(72000000).getHours())
      //this.$navigate({url:"./index2"})
    }

    onShow(){
      this.isbind=this.$parent.globalData.isbind
      this.roomId=this.$parent.globalData.roomId
      //console.log(this.$parent.globalData.isbind)

      if(this.data.flag1==true && this.$parent.globalData.isbind==false){
        //控制没有绑定学号，多次刷新只出来一个“身份绑定”的按钮
        this.data.flag1=false
        var json={ 'title': '绑定学号', 'name': 'identity', 'color': 'orange', 'icon': 'link' }
        var ele=this.data.elements
        ele.push(json)
        this.elements=ele
      }
    }


    onPullDownRefresh(){
      //页面相关事件处理函数--监听用户下拉动作
      this.log("onPullDownRefresh")
      this.isbind=this.$parent.globalData.isbind
      this.roomId=this.$parent.globalData.roomId
      this.userInfo=this.$parent.globalData.userInfo
      if(this.data.flag1==true && this.$parent.globalData.isbind==false){
        //控制没有绑定学号，多次刷新只出来一个“身份绑定”的按钮
        that.data.flag1=false
        var json={ 'title': '绑定学号', 'name': 'identity', 'color': 'orange', 'icon': 'link' }
        var ele=that.data.elements
        ele.push(json)
        that.elements=ele
      }
      setTimeout(function(){  wx.stopPullDownRefresh()},1500)
    }

    toast(title,icon,duration){
      //自己封装的Toast函数
      wx.showToast({
        title:title,
        icon: icon,
        duration:duration
      })
    }

    log(res){
      //自己封装的log函数
      console.log("idnex:  "+res)
    }

    getIntoRoomSendMessage(){
      //加入房间
      var number=this.data.number
      var that=this
      wx.request({
        url: that.$parent.globalData.url + "room/getRoom",
        method: 'POST',
        data: {
          "roomNumber": number,
          "openId": that.$parent.globalData.openId
        },
        header: {
          "Content-Type": "application/x-www-form-urlencoded"
        },
        complete: function (res) {
          if (res.statusCode != 200) {
            that.log("网络传输有错误！");
            that.oast("网络出错了！","none",1000);
          } else {
            if(res.data==""){
              that.toast("服务器出错！","none",1000);
              that.$parent.globalData.roomId=""
              that.$parent.globalData.roomIds=1
            }else if (res.data.status == 0) {
              //表示该房间号不存在
              that.toast("您要找的房间不存在！","none",1500);
              that.$parent.globalData.roomId=""
              that.$parent.globalData.roomIds=1
            } else if (res.data.status == 1) {
              //成功进入
              //console.log(res.data);
              that.$parent.globalData.remark=res.data.remark;
              that.$parent.globalData.roomId=number
              that.$parent.globalData.roomIds=res.data.roomId
              that.toast("成功加入房间！","success",1000)
              that.$apply()
              
              setTimeout(function(){
                wx.switchTab({
                  url: './time'
                })
              },1888)
            }

          }
        }
      });
    }
    
  }
</script>
